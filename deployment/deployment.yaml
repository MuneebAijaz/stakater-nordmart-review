apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: review
    appVersion: "v0.0.2"
    group: com.stakater.platform
    provider: stakater
    team: stakater
    chart: "application-0.0.31"
    release: "stakater-nordmart-review"
    heritage: "Helm"
    appCategory: backend
  annotations: 
    reloader.stakater.com/auto: "true"
  name: review
spec:
  replicas: 2
  selector:
    matchLabels:
      app: review
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: review
    spec:      
      imagePullSecrets:
      - name: nexus-docker-config-forked
      containers:
      - name: review
        image: "stakater/stakater-nordmart-review:v0.0.2"
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: review
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 1Gi
            cpu: 0.5
          requests:
            memory: 128Mi
            cpu: 0.1
      serviceAccountName: review
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-mongodb
  namespace: default
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-10.0.5
    app.kubernetes.io/instance: stakater-nordmart-review
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: stakater-nordmart-review
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-10.0.5
        app.kubernetes.io/instance: stakater-nordmart-review
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:

      serviceAccountName: review-mongodb
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:4.4.2-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath:
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: review-mongodb

